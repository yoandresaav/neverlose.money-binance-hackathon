{
  "contractName": "ERC20Token",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(string,string)\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ggoma/Projects/neverlose.money-contract/contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ggoma/Projects/neverlose.money-contract/contracts/ERC20Token.sol\":{\"keccak256\":\"0x02d3fdb03e772317e52e5231b619f0ce1a47be0b8fcad75f3045664168e26d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://582f7f41f74c815debc310842113ca7cf89e6dfd5564e03a9b82935703a40c59\",\"dweb:/ipfs/QmdRzuCKHym9aPxedSPXZJMk7vhx4tgXGvCw1jpQEcAvqY\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/GSN/Context.sol\":{\"keccak256\":\"0xec2b8b3d8c1e128369b6a05a306243e496e34e379bdeffe236cf86fc03e6e4d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c7e9b6546b9b3b05722bf12dc2c849ea4f404528cb9e5330c1f60dd3ac5db00\",\"dweb:/ipfs/QmT2PJqJzR1SgGy7QPAE43ZhH9eHH5uZ7oAoyg7weAvPFt\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/Initializable.sol\":{\"keccak256\":\"0x7b3f5d65a192bb847a941b476fc0b1aa5ecc8c9ae060f333e56b1698cfe84459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03eb3abdaea3d12855a6b1611312b84e8d5c0d4d7b1040b9eee8d1910aca0c93\",\"dweb:/ipfs/QmfYFxEKF7Kuhvu99NvxTtdf2bgZZJPCaDVLWyVKwNfACL\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/access/AccessControl.sol\":{\"keccak256\":\"0x7bbb1078636f2f5f178936a3c8d04fb911f87336178700341bf858fddd5d8a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59bb0b142acfafaf11417c8d1afa700af4316b3d56716d0f9d725d2abbaf74b5\",\"dweb:/ipfs/QmP1UGx5AdzzEYw3o74FWbL2bUULBASHdc8tqrtaC1vAJw\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x598ba6a794a03a9888ea190ab3085b38b5c820be311c8a68a3e3d6e74769a8be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa20f35bfaae068e7e91d44f23b933d67fa845c66d321cbe8b26a5351e94a182\",\"dweb:/ipfs/Qmcka5GGXLmQC9h2p9KjjtbCGiqvBdJPtPTdAPy42PMMfe\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x05178e4cea2de80d531440fc4228e9e16b2a78c4dfdaf90dcfe9ee8839305899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://089615a0378105c8fee794a166890d603fe7d7ba63eab336b7a3117a53b804b6\",\"dweb:/ipfs/QmRheSGQ14Cj8Y5oPYzcneBXjHYUpa1cuvcynA1kJMZdsk\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x680793f24ce656890cdfb429d4dee4cdf0548ee80967c4f366f2d303c8e844a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ec0a781f026696e186e55454b08576c9a0f5b9ef31a51ec7b655c26717b7a1b\",\"dweb:/ipfs/QmRc9rvus6YgR9nvv8dLaebGLbQHbJfnTQUX1ypY29smnB\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa5fc4e01d48959b5d41bfeda4842c40ee3387dbe403a1d615fbafc8d9cc4db77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b48e2de21e967685b1cecac5d8d2f2a5fbb173476cfe1e40e54d8c13065e65e2\",\"dweb:/ipfs/QmS618Lu5FBFg8wm4nRFih2ro3e3BrVGXvvdvpVppNzd1n\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0x63cad533b0701b9768bbbccebe81cac0c1fbb54bbebfb14531e77c7e0396d4cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a4ab4d8f5e4455e2caa97cac2d00fa1cc018bb06bfd6d98563ae9fa8246b759\",\"dweb:/ipfs/QmPhXkWhJN7JmMJw28N1sZdfDdHXoYrEgdqLgCaa69fxwh\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x29dc2aa15069e3626ce550d7d437de799681cece3a57d8afb45930166195aa56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d2e544baeff64bc99a7fd189f9c8f35863f797441bc6733679bf5545bdbdcac\",\"dweb:/ipfs/QmUufss5cVyDZkGoh5yVb4QSKar8WKidR61JgowdpEsgaK\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/utils/Address.sol\":{\"keccak256\":\"0xdff2756cf67369bdd35865a0fb4d0e4f3b6cbc99d68f23ba8a61fa730c7fac23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec59941397d19fabe5dbc34fdd1131d0cfe6efaa9c05e326f2f70c56222b5d21\",\"dweb:/ipfs/QmfAfRMGRHFdAdjCvvGyfYo6FP9EzTCwMuSRd6bcd4wN6n\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/utils/EnumerableSet.sol\":{\"keccak256\":\"0x8a11a5d05d302241c407a0777470ff82f5f071b75d869d00a11adcef36a22330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37400f1e3c4cfd06d158996010e2bd32210c31e8bdca2e5229db28baa96978a0\",\"dweb:/ipfs/QmUYEgod9kmFDU8kQnVFiZ6VMpcucTqdN21zy831KQtYdH\"]},\"/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/utils/Pausable.sol\":{\"keccak256\":\"0x443db1a9cc9354b576312cf4d33ee241f43613f9b07b7d43053e11b91224dc61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6070ab461709806ae750a388f35889e07aac92c3eb93e3cc2bed5824db0542ba\",\"dweb:/ipfs/QmV8ZeEpVDHQi2jy4LurVbzXCSbaWktxG8MUVp483VHdaC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506135e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a217fddf116100a2578063d539139311610071578063d539139314610b91578063d547741f14610baf578063dd62ed3e14610bfd578063e63ab1e914610c75576101da565b8063a217fddf14610a69578063a457c2d714610a87578063a9059cbb14610aeb578063ca15c87314610b4f576101da565b80639010d07c116100de5780639010d07c146108dc57806391d148541461093e57806395d89b41146109a2578063983b2d5614610a25576101da565b806370a082311461082c57806379cc6790146108845780638456cb59146108d2576101da565b8063313ce5671161017c57806340c10f191161014b57806340c10f191461063e57806342966c681461068c5780634cd88b76146106ba5780635c975abb1461080c576101da565b8063313ce5671461056157806336568abe1461058257806339509351146105d05780633f4ba83a14610634576101da565b806323b872dd116101b857806323b872dd146102e4578063248a9ca314610368578063253279ad146103aa5780632f2ff15d14610513576101da565b806306fdde03146101df578063095ea7b31461026257806318160ddd146102c6575b600080fd5b6101e7610c93565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ae6004803603604081101561027857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d35565b60405180821515815260200191505060405180910390f35b6102ce610d53565b6040518082815260200191505060405180910390f35b610350600480360360608110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d5d565b60405180821515815260200191505060405180910390f35b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610e36565b6040518082815260200191505060405180910390f35b610511600480360360808110156103c057600080fd5b81019080803590602001906401000000008111156103dd57600080fd5b8201836020820111156103ef57600080fd5b8035906020019184600183028401116401000000008311171561041157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561047457600080fd5b82018360208201111561048657600080fd5b803590602001918460018302840111640100000000831117156104a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919080359060200190929190505050610e56565b005b61055f6004803603604081101561052957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7f565b005b610569611009565b604051808260ff16815260200191505060405180910390f35b6105ce6004803603604081101561059857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611020565b005b61061c600480360360408110156105e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110b9565b60405180821515815260200191505060405180910390f35b61063c61116c565b005b61068a6004803603604081101561065457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111fc565b005b6106b8600480360360208110156106a257600080fd5b8101908080359060200190929190505050611290565b005b61080a600480360360408110156106d057600080fd5b81019080803590602001906401000000008111156106ed57600080fd5b8201836020820111156106ff57600080fd5b8035906020019184600183028401116401000000008311171561072157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561078457600080fd5b82018360208201111561079657600080fd5b803590602001918460018302840111640100000000831117156107b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112a4565b005b6108146112b2565b60405180821515815260200191505060405180910390f35b61086e6004803603602081101561084257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c9565b6040518082815260200191505060405180910390f35b6108d06004803603604081101561089a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611312565b005b6108da611374565b005b610912600480360360408110156108f257600080fd5b810190808035906020019092919080359060200190929190505050611404565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61098a6004803603604081101561095457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611436565b60405180821515815260200191505060405180910390f35b6109aa611468565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109ea5780820151818401526020810190506109cf565b50505050905090810190601f168015610a175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6760048036036020811015610a3b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150a565b005b610a716115bd565b6040518082815260200191505060405180910390f35b610ad360048036036040811015610a9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c4565b60405180821515815260200191505060405180910390f35b610b3760048036036040811015610b0157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611691565b60405180821515815260200191505060405180910390f35b610b7b60048036036020811015610b6557600080fd5b81019080803590602001909291905050506116af565b6040518082815260200191505060405180910390f35b610b996116d6565b6040518082815260200191505060405180910390f35b610bfb60048036036040811015610bc557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116fa565b005b610c5f60048036036040811015610c1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611784565b6040518082815260200191505060405180910390f35b610c7d61180b565b6040518082815260200191505060405180910390f35b6060609a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d2b5780601f10610d0057610100808354040283529160200191610d2b565b820191906000526020600020905b815481529060010190602001808311610d0e57829003601f168201915b5050505050905090565b6000610d49610d4261182f565b8484611837565b6001905092915050565b6000609954905090565b6000610d6a848484611a2e565b610e2b84610d7661182f565b610e26856040518060600160405280602881526020016133e360289139609860008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610ddc61182f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b611837565b600190509392505050565b600060656000838152602001908152602001600020600201549050919050565b600060019054906101000a900460ff1680610e755750610e74611db3565b5b80610e8b575060008054906101000a900460ff16155b610ee0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610f30576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f3a85856112a4565b610f4383611dca565b6000821115610f5757610f563383611de8565b5b8015610f785760008060016101000a81548160ff0219169083151502179055505b5050505050565b610fa66065600084815260200190815260200160002060020154610fa161182f565b611436565b610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806132a3602f913960400191505060405180910390fd5b6110058282611fb1565b5050565b6000609c60009054906101000a900460ff16905090565b61102861182f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613559602f913960400191505060405180910390fd5b6110b58282612045565b5050565b60006111626110c661182f565b8461115d85609860006110d761182f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120d990919063ffffffff16565b611837565b6001905092915050565b61119d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61119861182f565b611436565b6111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806132f46039913960400191505060405180910390fd5b6111fa612161565b565b61122d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661122861182f565b611436565b611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603681526020018061340b6036913960400191505060405180910390fd5b61128c8282611de8565b5050565b6112a161129b61182f565b82612254565b50565b6112ae828261241a565b5050565b600060fb60009054906101000a900460ff16905090565b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006113518260405180606001604052806024815260200161346f602491396113428661133d61182f565b611784565b611cf39092919063ffffffff16565b90506113658361135f61182f565b83611837565b61136f8383612254565b505050565b6113a57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6113a061182f565b611436565b6113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806134fd6037913960400191505060405180910390fd5b611402612554565b565b600061142e826065600086815260200190815260200160002060000161264890919063ffffffff16565b905092915050565b6000611460826065600086815260200190815260200160002060000161266290919063ffffffff16565b905092915050565b6060609b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115005780601f106114d557610100808354040283529160200191611500565b820191906000526020600020905b8154815290600101906020018083116114e357829003601f168201915b5050505050905090565b61153b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661153661182f565b611436565b611590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001806133a5603e913960400191505060405180910390fd5b6115ba7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682612692565b50565b6000801b81565b60006116876115d161182f565b846116828560405180606001604052806025815260200161353460259139609860006115fb61182f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b611837565b6001905092915050565b60006116a561169e61182f565b8484611a2e565b6001905092915050565b60006116cf606560008481526020019081526020016000206000016126a0565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611721606560008481526020019081526020016000206002015461171c61182f565b611436565b611776576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806133756030913960400191505060405180910390fd5b6117808282612045565b5050565b6000609860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806134d96024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061332d6022913960400191505060405180910390fd5b80609860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ab4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806134b46025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806132806023913960400191505060405180910390fd5b611b458383836126b5565b611bb18160405180606001604052806026815260200161334f60269139609760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b609760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c4681609760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120d990919063ffffffff16565b609760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611da0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d65578082015181840152602081019050611d4a565b50505050905090810190601f168015611d925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000803090506000813b9050600081149250505090565b80609c60006101000a81548160ff021916908360ff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611e97600083836126b5565b611eac816099546120d990919063ffffffff16565b609981905550611f0481609760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120d990919063ffffffff16565b609760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611fd981606560008581526020019081526020016000206000016126c590919063ffffffff16565b1561204157611fe661182f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61206d81606560008581526020019081526020016000206000016126f590919063ffffffff16565b156120d55761207a61182f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015612157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60fb60009054906101000a900460ff166121e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b600060fb60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61222761182f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134936021913960400191505060405180910390fd5b6122e6826000836126b5565b612352816040518060600160405280602281526020016132d260229139609760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b609760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506123aa8160995461272590919063ffffffff16565b609981905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060019054906101000a900460ff16806124395750612438611db3565b5b8061244f575060008054906101000a900460ff16155b6124a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156124f4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6124fc61276f565b61250461286d565b61250e838361296b565b612516612ab5565b61251e612bb3565b612526612ccc565b61252e612dca565b801561254f5760008060016101000a81548160ff0219169083151502179055505b505050565b60fb60009054906101000a900460ff16156125d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600160fb60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861261b61182f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006126578360000183612f3e565b60001c905092915050565b600061268a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612fc1565b905092915050565b61269c8282611fb1565b5050565b60006126ae82600001612fe4565b9050919050565b6126c0838383612ff5565b505050565b60006126ed836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613063565b905092915050565b600061271d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6130d3565b905092915050565b600061276783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611cf3565b905092915050565b600060019054906101000a900460ff168061278e575061278d611db3565b5b806127a4575060008054906101000a900460ff16155b6127f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612849576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561286a5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061288c575061288b611db3565b5b806128a2575060008054906101000a900460ff16155b6128f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612947576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156129685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061298a5750612989611db3565b5b806129a0575060008054906101000a900460ff16155b6129f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a45576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b82609a9080519060200190612a5b9291906131c0565b5081609b9080519060200190612a729291906131c0565b506012609c60006101000a81548160ff021916908360ff1602179055508015612ab05760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680612ad45750612ad3611db3565b5b80612aea575060008054906101000a900460ff16155b612b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612b8f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015612bb05760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612bd25750612bd1611db3565b5b80612be8575060008054906101000a900460ff16155b612c3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612c8d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600060fb60006101000a81548160ff0219169083151502179055508015612cc95760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612ceb5750612cea611db3565b5b80612d01575060008054906101000a900460ff16155b612d56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612da6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015612dc75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612de95750612de8611db3565b5b80612dff575060008054906101000a900460ff16155b612e54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612ea4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612eb86000801b612eb361182f565b612692565b612ee97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612ee461182f565b612692565b612f1a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a612f1561182f565b612692565b8015612f3b5760008060016101000a81548160ff0219169083151502179055505b50565b600081836000018054905011612f9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061325e6022913960400191505060405180910390fd5b826000018281548110612fae57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6130008383836131bb565b6130086112b2565b1561305e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613588602a913960400191505060405180910390fd5b505050565b600061306f8383612fc1565b6130c85782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506130cd565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146131af576000600182039050600060018660000180549050039050600086600001828154811061311e57fe5b906000526020600020015490508087600001848154811061313b57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061317357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506131b5565b60009150505b92915050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061320157805160ff191683800117855561322f565b8280016001018555821561322f579182015b8281111561322e578251825591602001919060010190613213565b5b50905061323c9190613240565b5090565b5b80821115613259576000816000905550600101613241565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206164642061206d696e74657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220d510ca0594da3c2a8c178280223a00f21e00c307f4d58c1a7bb7491f1cd42e6964736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a217fddf116100a2578063d539139311610071578063d539139314610b91578063d547741f14610baf578063dd62ed3e14610bfd578063e63ab1e914610c75576101da565b8063a217fddf14610a69578063a457c2d714610a87578063a9059cbb14610aeb578063ca15c87314610b4f576101da565b80639010d07c116100de5780639010d07c146108dc57806391d148541461093e57806395d89b41146109a2578063983b2d5614610a25576101da565b806370a082311461082c57806379cc6790146108845780638456cb59146108d2576101da565b8063313ce5671161017c57806340c10f191161014b57806340c10f191461063e57806342966c681461068c5780634cd88b76146106ba5780635c975abb1461080c576101da565b8063313ce5671461056157806336568abe1461058257806339509351146105d05780633f4ba83a14610634576101da565b806323b872dd116101b857806323b872dd146102e4578063248a9ca314610368578063253279ad146103aa5780632f2ff15d14610513576101da565b806306fdde03146101df578063095ea7b31461026257806318160ddd146102c6575b600080fd5b6101e7610c93565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022757808201518184015260208101905061020c565b50505050905090810190601f1680156102545780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ae6004803603604081101561027857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d35565b60405180821515815260200191505060405180910390f35b6102ce610d53565b6040518082815260200191505060405180910390f35b610350600480360360608110156102fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d5d565b60405180821515815260200191505060405180910390f35b6103946004803603602081101561037e57600080fd5b8101908080359060200190929190505050610e36565b6040518082815260200191505060405180910390f35b610511600480360360808110156103c057600080fd5b81019080803590602001906401000000008111156103dd57600080fd5b8201836020820111156103ef57600080fd5b8035906020019184600183028401116401000000008311171561041157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561047457600080fd5b82018360208201111561048657600080fd5b803590602001918460018302840111640100000000831117156104a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff16906020019092919080359060200190929190505050610e56565b005b61055f6004803603604081101561052957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7f565b005b610569611009565b604051808260ff16815260200191505060405180910390f35b6105ce6004803603604081101561059857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611020565b005b61061c600480360360408110156105e657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110b9565b60405180821515815260200191505060405180910390f35b61063c61116c565b005b61068a6004803603604081101561065457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111fc565b005b6106b8600480360360208110156106a257600080fd5b8101908080359060200190929190505050611290565b005b61080a600480360360408110156106d057600080fd5b81019080803590602001906401000000008111156106ed57600080fd5b8201836020820111156106ff57600080fd5b8035906020019184600183028401116401000000008311171561072157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561078457600080fd5b82018360208201111561079657600080fd5b803590602001918460018302840111640100000000831117156107b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112a4565b005b6108146112b2565b60405180821515815260200191505060405180910390f35b61086e6004803603602081101561084257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112c9565b6040518082815260200191505060405180910390f35b6108d06004803603604081101561089a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611312565b005b6108da611374565b005b610912600480360360408110156108f257600080fd5b810190808035906020019092919080359060200190929190505050611404565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61098a6004803603604081101561095457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611436565b60405180821515815260200191505060405180910390f35b6109aa611468565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109ea5780820151818401526020810190506109cf565b50505050905090810190601f168015610a175780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610a6760048036036020811015610a3b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061150a565b005b610a716115bd565b6040518082815260200191505060405180910390f35b610ad360048036036040811015610a9d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115c4565b60405180821515815260200191505060405180910390f35b610b3760048036036040811015610b0157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611691565b60405180821515815260200191505060405180910390f35b610b7b60048036036020811015610b6557600080fd5b81019080803590602001909291905050506116af565b6040518082815260200191505060405180910390f35b610b996116d6565b6040518082815260200191505060405180910390f35b610bfb60048036036040811015610bc557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116fa565b005b610c5f60048036036040811015610c1357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611784565b6040518082815260200191505060405180910390f35b610c7d61180b565b6040518082815260200191505060405180910390f35b6060609a8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d2b5780601f10610d0057610100808354040283529160200191610d2b565b820191906000526020600020905b815481529060010190602001808311610d0e57829003601f168201915b5050505050905090565b6000610d49610d4261182f565b8484611837565b6001905092915050565b6000609954905090565b6000610d6a848484611a2e565b610e2b84610d7661182f565b610e26856040518060600160405280602881526020016133e360289139609860008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610ddc61182f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b611837565b600190509392505050565b600060656000838152602001908152602001600020600201549050919050565b600060019054906101000a900460ff1680610e755750610e74611db3565b5b80610e8b575060008054906101000a900460ff16155b610ee0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610f30576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f3a85856112a4565b610f4383611dca565b6000821115610f5757610f563383611de8565b5b8015610f785760008060016101000a81548160ff0219169083151502179055505b5050505050565b610fa66065600084815260200190815260200160002060020154610fa161182f565b611436565b610ffb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806132a3602f913960400191505060405180910390fd5b6110058282611fb1565b5050565b6000609c60009054906101000a900460ff16905090565b61102861182f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613559602f913960400191505060405180910390fd5b6110b58282612045565b5050565b60006111626110c661182f565b8461115d85609860006110d761182f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120d990919063ffffffff16565b611837565b6001905092915050565b61119d7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61119861182f565b611436565b6111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260398152602001806132f46039913960400191505060405180910390fd5b6111fa612161565b565b61122d7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661122861182f565b611436565b611282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603681526020018061340b6036913960400191505060405180910390fd5b61128c8282611de8565b5050565b6112a161129b61182f565b82612254565b50565b6112ae828261241a565b5050565b600060fb60009054906101000a900460ff16905090565b6000609760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006113518260405180606001604052806024815260200161346f602491396113428661133d61182f565b611784565b611cf39092919063ffffffff16565b90506113658361135f61182f565b83611837565b61136f8383612254565b505050565b6113a57f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6113a061182f565b611436565b6113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806134fd6037913960400191505060405180910390fd5b611402612554565b565b600061142e826065600086815260200190815260200160002060000161264890919063ffffffff16565b905092915050565b6000611460826065600086815260200190815260200160002060000161266290919063ffffffff16565b905092915050565b6060609b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115005780601f106114d557610100808354040283529160200191611500565b820191906000526020600020905b8154815290600101906020018083116114e357829003601f168201915b5050505050905090565b61153b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661153661182f565b611436565b611590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e8152602001806133a5603e913960400191505060405180910390fd5b6115ba7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682612692565b50565b6000801b81565b60006116876115d161182f565b846116828560405180606001604052806025815260200161353460259139609860006115fb61182f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b611837565b6001905092915050565b60006116a561169e61182f565b8484611a2e565b6001905092915050565b60006116cf606560008481526020019081526020016000206000016126a0565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b611721606560008481526020019081526020016000206002015461171c61182f565b611436565b611776576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806133756030913960400191505060405180910390fd5b6117808282612045565b5050565b6000609860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806134d96024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061332d6022913960400191505060405180910390fd5b80609860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611ab4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806134b46025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806132806023913960400191505060405180910390fd5b611b458383836126b5565b611bb18160405180606001604052806026815260200161334f60269139609760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b609760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c4681609760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120d990919063ffffffff16565b609760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611da0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611d65578082015181840152602081019050611d4a565b50505050905090810190601f168015611d925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000803090506000813b9050600081149250505090565b80609c60006101000a81548160ff021916908360ff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611e97600083836126b5565b611eac816099546120d990919063ffffffff16565b609981905550611f0481609760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546120d990919063ffffffff16565b609760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611fd981606560008581526020019081526020016000206000016126c590919063ffffffff16565b1561204157611fe661182f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61206d81606560008581526020019081526020016000206000016126f590919063ffffffff16565b156120d55761207a61182f565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600080828401905083811015612157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60fb60009054906101000a900460ff166121e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b600060fb60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61222761182f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134936021913960400191505060405180910390fd5b6122e6826000836126b5565b612352816040518060600160405280602281526020016132d260229139609760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611cf39092919063ffffffff16565b609760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506123aa8160995461272590919063ffffffff16565b609981905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600060019054906101000a900460ff16806124395750612438611db3565b5b8061244f575060008054906101000a900460ff16155b6124a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156124f4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6124fc61276f565b61250461286d565b61250e838361296b565b612516612ab5565b61251e612bb3565b612526612ccc565b61252e612dca565b801561254f5760008060016101000a81548160ff0219169083151502179055505b505050565b60fb60009054906101000a900460ff16156125d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b600160fb60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861261b61182f565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60006126578360000183612f3e565b60001c905092915050565b600061268a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612fc1565b905092915050565b61269c8282611fb1565b5050565b60006126ae82600001612fe4565b9050919050565b6126c0838383612ff5565b505050565b60006126ed836000018373ffffffffffffffffffffffffffffffffffffffff1660001b613063565b905092915050565b600061271d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6130d3565b905092915050565b600061276783836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611cf3565b905092915050565b600060019054906101000a900460ff168061278e575061278d611db3565b5b806127a4575060008054906101000a900460ff16155b6127f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612849576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561286a5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061288c575061288b611db3565b5b806128a2575060008054906101000a900460ff16155b6128f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612947576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156129685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff168061298a5750612989611db3565b5b806129a0575060008054906101000a900460ff16155b6129f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a45576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b82609a9080519060200190612a5b9291906131c0565b5081609b9080519060200190612a729291906131c0565b506012609c60006101000a81548160ff021916908360ff1602179055508015612ab05760008060016101000a81548160ff0219169083151502179055505b505050565b600060019054906101000a900460ff1680612ad45750612ad3611db3565b5b80612aea575060008054906101000a900460ff16155b612b3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612b8f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015612bb05760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612bd25750612bd1611db3565b5b80612be8575060008054906101000a900460ff16155b612c3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612c8d576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600060fb60006101000a81548160ff0219169083151502179055508015612cc95760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612ceb5750612cea611db3565b5b80612d01575060008054906101000a900460ff16155b612d56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612da6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015612dc75760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612de95750612de8611db3565b5b80612dff575060008054906101000a900460ff16155b612e54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613441602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612ea4576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612eb86000801b612eb361182f565b612692565b612ee97f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612ee461182f565b612692565b612f1a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a612f1561182f565b612692565b8015612f3b5760008060016101000a81548160ff0219169083151502179055505b50565b600081836000018054905011612f9f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061325e6022913960400191505060405180910390fd5b826000018281548110612fae57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b6130008383836131bb565b6130086112b2565b1561305e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613588602a913960400191505060405180910390fd5b505050565b600061306f8383612fc1565b6130c85782600001829080600181540180825580915050600190039060005260206000200160009091909190915055826000018054905083600101600084815260200190815260200160002081905550600190506130cd565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146131af576000600182039050600060018660000180549050039050600086600001828154811061311e57fe5b906000526020600020015490508087600001848154811061313b57fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061317357fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506131b5565b60009150505b92915050565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061320157805160ff191683800117855561322f565b8280016001018555821561322f579182015b8281111561322e578251825591602001919060010190613213565b5b50905061323c9190613240565b5090565b5b80821115613259576000816000905550600101613241565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e647345524332303a207472616e7366657220746f20746865207a65726f2061646472657373416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e7445524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e706175736545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b6545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206164642061206d696e74657245524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656445524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332305072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20706175736545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c6645524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220d510ca0594da3c2a8c178280223a00f21e00c307f4d58c1a7bb7491f1cd42e6964736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "162:575:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "162:575:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2501:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4537:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3544:98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5163:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3952:112:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;239:297:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4314:223:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3403:81:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5488:205:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5875:215:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3055:167:10;;;:::i;:::-;;2290:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;851:89:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1324:130:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1280:76:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3700:117:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1246:290:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2687:161:10;;;:::i;:::-;;3635:136:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2620:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2695:85:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:195:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1810:49:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6577:266:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4020:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2925:125:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1009:62:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4771:226:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4250:149:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1077:62:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2501:81:11;2538:13;2570:5;2563:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2501:81;:::o;4537:166::-;4620:4;4636:39;4645:12;:10;:12::i;:::-;4659:7;4668:6;4636:8;:39::i;:::-;4692:4;4685:11;;4537:166;;;;:::o;3544:98::-;3597:7;3623:12;;3616:19;;3544:98;:::o;5163:317::-;5269:4;5285:36;5295:6;5303:9;5314:6;5285:9;:36::i;:::-;5331:121;5340:6;5348:12;:10;:12::i;:::-;5362:89;5400:6;5362:89;;;;;;;;;;;;;;;;;:11;:19;5374:6;5362:19;;;;;;;;;;;;;;;:33;5382:12;:10;:12::i;:::-;5362:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5331:8;:121::i;:::-;5469:4;5462:11;;5163:317;;;;;:::o;3952:112:6:-;4009:7;4035:6;:12;4042:4;4035:12;;;;;;;;;;;:22;;;4028:29;;3952:112;;;:::o;239:297:0:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;365:59:0::1;411:4;417:6;365:45;:59::i;:::-;431:24;446:8;431:14;:24::i;:::-;482:1;466:13;:17;462:70;;;493:32;499:10;511:13;493:5;:32::i;:::-;462:70;1299:14:5::0;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;239:297:0;;;;;:::o;4314:223:6:-;4397:45;4405:6;:12;4412:4;4405:12;;;;;;;;;;;:22;;;4429:12;:10;:12::i;:::-;4397:7;:45::i;:::-;4389:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4505:25;4516:4;4522:7;4505:10;:25::i;:::-;4314:223;;:::o;3403:81:11:-;3444:5;3468:9;;;;;;;;;;;3461:16;;3403:81;:::o;5488:205:6:-;5585:12;:10;:12::i;:::-;5574:23;;:7;:23;;;5566:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5660:26;5672:4;5678:7;5660:11;:26::i;:::-;5488:205;;:::o;5875:215:11:-;5963:4;5979:83;5988:12;:10;:12::i;:::-;6002:7;6011:50;6050:10;6011:11;:25;6023:12;:10;:12::i;:::-;6011:25;;;;;;;;;;;;;;;:34;6037:7;6011:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5979:8;:83::i;:::-;6079:4;6072:11;;5875:215;;;;:::o;3055:167:10:-;3099:34;1115:24;3120:12;:10;:12::i;:::-;3099:7;:34::i;:::-;3091:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3205:10;:8;:10::i;:::-;3055:167::o;2290:194::-;2357:34;1047:24;2378:12;:10;:12::i;:::-;2357:7;:34::i;:::-;2349:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2460:17;2466:2;2470:6;2460:5;:17::i;:::-;2290:194;;:::o;851:89:12:-;906:27;912:12;:10;:12::i;:::-;926:6;906:5;:27::i;:::-;851:89;:::o;1324:130:10:-;1403:44;1434:4;1440:6;1403:30;:44::i;:::-;1324:130;;:::o;1280:76:18:-;1319:4;1342:7;;;;;;;;;;;1335:14;;1280:76;:::o;3700:117:11:-;3766:7;3792:9;:18;3802:7;3792:18;;;;;;;;;;;;;;;;3785:25;;3700:117;;;:::o;1246:290:12:-;1322:26;1351:84;1388:6;1351:84;;;;;;;;;;;;;;;;;:32;1361:7;1370:12;:10;:12::i;:::-;1351:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;1322:113;;1446:51;1455:7;1464:12;:10;:12::i;:::-;1478:18;1446:8;:51::i;:::-;1507:22;1513:7;1522:6;1507:5;:22::i;:::-;1246:290;;;:::o;2687:161:10:-;2729:34;1115:24;2750:12;:10;:12::i;:::-;2729:7;:34::i;:::-;2721:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:8;:6;:8::i;:::-;2687:161::o;3635:136:6:-;3708:7;3734:30;3758:5;3734:6;:12;3741:4;3734:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3727:37;;3635:136;;;;:::o;2620:137::-;2689:4;2712:38;2742:7;2712:6;:12;2719:4;2712:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2705:45;;2620:137;;;;:::o;2695:85:11:-;2734:13;2766:7;2759:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2695:85;:::o;540:195:0:-;594:34;1047:24:10;615:12:0;:10;:12::i;:::-;594:7;:34::i;:::-;586:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;701:29;1047:24:10;725:4:0;701:10;:29::i;:::-;540:195;:::o;1810:49:6:-;1855:4;1810:49;;;:::o;6577:266:11:-;6670:4;6686:129;6695:12;:10;:12::i;:::-;6709:7;6718:96;6757:15;6718:96;;;;;;;;;;;;;;;;;:11;:25;6730:12;:10;:12::i;:::-;6718:25;;;;;;;;;;;;;;;:34;6744:7;6718:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6686:8;:129::i;:::-;6832:4;6825:11;;6577:266;;;;:::o;4020:172::-;4106:4;4122:42;4132:12;:10;:12::i;:::-;4146:9;4157:6;4122:9;:42::i;:::-;4181:4;4174:11;;4020:172;;;;:::o;2925:125:6:-;2988:7;3014:29;:6;:12;3021:4;3014:12;;;;;;;;;;;:20;;:27;:29::i;:::-;3007:36;;2925:125;;;:::o;1009:62:10:-;1047:24;1009:62;:::o;4771:226:6:-;4855:45;4863:6;:12;4870:4;4863:12;;;;;;;;;;;:22;;;4887:12;:10;:12::i;:::-;4855:7;:45::i;:::-;4847:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4964:26;4976:4;4982:7;4964:11;:26::i;:::-;4771:226;;:::o;4250:149:11:-;4339:7;4365:11;:18;4377:5;4365:18;;;;;;;;;;;;;;;:27;4384:7;4365:27;;;;;;;;;;;;;;;;4358:34;;4250:149;;;;:::o;1077:62:10:-;1115:24;1077:62;:::o;964:104:4:-;1017:15;1051:10;1044:17;;964:104;:::o;9641:340:11:-;9759:1;9742:19;;:5;:19;;;;9734:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9839:1;9820:21;;:7;:21;;;;9812:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9921:6;9891:11;:18;9903:5;9891:18;;;;;;;;;;;;;;;:27;9910:7;9891:27;;;;;;;;;;;;;;;:36;;;;9958:7;9942:32;;9951:5;9942:32;;;9967:6;9942:32;;;;;;;;;;;;;;;;;;9641:340;;;:::o;7317:530::-;7440:1;7422:20;;:6;:20;;;;7414:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7523:1;7502:23;;:9;:23;;;;7494:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7576:47;7597:6;7605:9;7616:6;7576:20;:47::i;:::-;7654:71;7676:6;7654:71;;;;;;;;;;;;;;;;;:9;:17;7664:6;7654:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7634:9;:17;7644:6;7634:17;;;;;;;;;;;;;;;:91;;;;7758:32;7783:6;7758:9;:20;7768:9;7758:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7735:9;:20;7745:9;7735:20;;;;;;;;;;;;;;;:55;;;;7822:9;7805:35;;7814:6;7805:35;;;7833:6;7805:35;;;;;;;;;;;;;;;;;;7317:530;;;:::o;1724:187:9:-;1810:7;1842:1;1837;:6;;1845:12;1829:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1868:9;1884:1;1880;:5;1868:17;;1903:1;1896:8;;;1724:187;;;;;:::o;1440:498:5:-;1487:4;1828:12;1851:4;1828:28;;1862:10;1907:4;1895:17;1889:23;;1932:1;1926:2;:7;1919:14;;;;1440:498;:::o;10304:88:11:-;10376:9;10364;;:21;;;;;;;;;;;;;;;;;;10304:88;:::o;8117:370::-;8219:1;8200:21;;:7;:21;;;;8192:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8268:49;8297:1;8301:7;8310:6;8268:20;:49::i;:::-;8343:24;8360:6;8343:12;;:16;;:24;;;;:::i;:::-;8328:12;:39;;;;8398:30;8421:6;8398:9;:18;8408:7;8398:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8377:9;:18;8387:7;8377:18;;;;;;;;;;;;;;;:51;;;;8464:7;8443:37;;8460:1;8443:37;;;8473:6;8443:37;;;;;;;;;;;;;;;;;;8117:370;;:::o;6575:184:6:-;6648:33;6673:7;6648:6;:12;6655:4;6648:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6644:109;;;6729:12;:10;:12::i;:::-;6702:40;;6720:7;6702:40;;6714:4;6702:40;;;;;;;;;;6644:109;6575:184;;:::o;6765:188::-;6839:36;6867:7;6839:6;:12;6846:4;6839:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6835:112;;;6923:12;:10;:12::i;:::-;6896:40;;6914:7;6896:40;;6908:4;6896:40;;;;;;;;;;6835:112;6765:188;;:::o;866:176:9:-;924:7;943:9;959:1;955;:5;943:17;;983:1;978;:6;;970:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:1;1027:8;;;866:176;;;;:::o;1982:117:18:-;1700:7;;;;;;;;;;;1692:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5:::1;2040:7;;:15;;;;;;;;;;;;;;;;;;2070:22;2079:12;:10;:12::i;:::-;2070:22;;;;;;;;;;;;;;;;;;;;1982:117::o:0;8806:410:11:-;8908:1;8889:21;;:7;:21;;;;8881:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8959:49;8980:7;8997:1;9001:6;8959:20;:49::i;:::-;9040:68;9063:6;9040:68;;;;;;;;;;;;;;;;;:9;:18;9050:7;9040:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;9019:9;:18;9029:7;9019:18;;;;;;;;;;;;;;;:89;;;;9133:24;9150:6;9133:12;;:16;;:24;;;;:::i;:::-;9118:12;:39;;;;9198:1;9172:37;;9181:7;9172:37;;;9202:6;9172:37;;;;;;;;;;;;;;;;;;8806:410;;:::o;1460:407:10:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1573:26:10::1;:24;:26::i;:::-;1609:32;:30;:32::i;:::-;1651:36;1674:4;1680:6;1651:22;:36::i;:::-;1697:32;:30;:32::i;:::-;1739:27;:25;:27::i;:::-;1776:32;:30;:32::i;:::-;1818:42;:40;:42::i;:::-;1299:14:5::0;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;1460:407:10;;;:::o;1808:115:18:-;1509:7;;;;;;;;;;;1508:8;1500:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:4:::1;1867:7;;:14;;;;;;;;;;;;;;;;;;1896:20;1903:12;:10;:12::i;:::-;1896:20;;;;;;;;;;;;;;;;;;;;1808:115::o:0;6084:147:17:-;6158:7;6200:22;6204:3;:10;;6216:5;6200:3;:22::i;:::-;6192:31;;6177:47;;6084:147;;;;:::o;5400:156::-;5480:4;5503:46;5513:3;:10;;5541:5;5533:14;;5525:23;;5503:9;:46::i;:::-;5496:53;;5400:156;;;;:::o;6258:110:6:-;6336:25;6347:4;6353:7;6336:10;:25::i;:::-;6258:110;;:::o;5637:115:17:-;5700:7;5726:19;5734:3;:10;;5726:7;:19::i;:::-;5719:26;;5637:115;;;:::o;3228:195:10:-;3372:44;3399:4;3405:2;3409:6;3372:26;:44::i;:::-;3228:195;;;:::o;4863:141:17:-;4933:4;4956:41;4961:3;:10;;4989:5;4981:14;;4973:23;;4956:4;:41::i;:::-;4949:48;;4863:141;;;;:::o;5172:147::-;5245:4;5268:44;5276:3;:10;;5304:5;5296:14;;5288:23;;5268:7;:44::i;:::-;5261:51;;5172:147;;;;:::o;1306:134:9:-;1364:7;1390:43;1394:1;1397;1390:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1383:50;;1306:134;;;;:::o;891:66:4:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1299:14;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;891:66:4;:::o;1497:72:6:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1299:14;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;1497:72:6;:::o;2258:177:11:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;2373:4:11::1;2365:5;:12;;;;;;;;;;;;:::i;:::-;;2397:6;2387:7;:16;;;;;;;;;;;;:::i;:::-;;2425:2;2413:9;;:14;;;;;;;;;;;;;;;;;;1299::5::0;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;2258:177:11;;;:::o;670:72:12:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1299:14;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;670:72:12;:::o;1091:93:18:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1171:5:18::1;1161:7;;:15;;;;;;;;;;;;;;;;;;1299:14:5::0;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;1091:93:18;:::o;705:72:13:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1299:14;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;705:72:13;:::o;1873:228:10:-;1055:12:5;;;;;;;;;;;:31;;;;1071:15;:13;:15::i;:::-;1055:31;:47;;;;1091:11;;;;;;;;;;1090:12;1055:47;1047:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1160:19;1183:12;;;;;;;;;;;1182:13;1160:35;;1205:14;1201:80;;;1244:4;1229:12;;:19;;;;;;;;;;;;;;;;;;1270:4;1256:11;;:18;;;;;;;;;;;;;;;;;;1201:80;1956:44:10::1;1855:4:6;1967:18:10::0;::::1;1987:12;:10;:12::i;:::-;1956:10;:44::i;:::-;2010:37;1047:24;2034:12;:10;:12::i;:::-;2010:10;:37::i;:::-;2057;1115:24;2081:12;:10;:12::i;:::-;2057:10;:37::i;:::-;1299:14:5::0;1295:55;;;1338:5;1323:12;;:20;;;;;;;;;;;;;;;;;;1295:55;1873:228:10;:::o;4422:201:17:-;4489:7;4537:5;4516:3;:11;;:18;;;;:26;4508:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4598:3;:11;;4610:5;4598:18;;;;;;;;;;;;;;;;4591:25;;4422:201;;;;:::o;3775:127::-;3848:4;3894:1;3871:3;:12;;:19;3884:5;3871:19;;;;;;;;;;;;:24;;3864:31;;3775:127;;;;:::o;3983:107::-;4039:7;4065:3;:11;;:18;;;;4058:25;;3983:107;;;:::o;922:234:13:-;1030:44;1057:4;1063:2;1067:6;1030:26;:44::i;:::-;1094:8;:6;:8::i;:::-;1093:9;1085:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:234;;;:::o;1610:404:17:-;1673:4;1694:21;1704:3;1709:5;1694:9;:21::i;:::-;1689:319;;1731:3;:11;;1748:5;1731:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:3;:11;;:18;;;;1889:3;:12;;:19;1902:5;1889:19;;;;;;;;;;;:40;;;;1950:4;1943:11;;;;1689:319;1992:5;1985:12;;1610:404;;;;;:::o;2182:1512::-;2248:4;2364:18;2385:3;:12;;:19;2398:5;2385:19;;;;;;;;;;;;2364:40;;2433:1;2419:10;:15;2415:1273;;2776:21;2813:1;2800:10;:14;2776:38;;2828:17;2869:1;2848:3;:11;;:18;;;;:22;2828:42;;3110:17;3130:3;:11;;3142:9;3130:22;;;;;;;;;;;;;;;;3110:42;;3273:9;3244:3;:11;;3256:13;3244:26;;;;;;;;;;;;;;;:38;;;;3390:1;3374:13;:17;3348:3;:12;;:23;3361:9;3348:23;;;;;;;;;;;:43;;;;3497:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3589:3;:12;;:19;3602:5;3589:19;;;;;;;;;;;3582:26;;;3630:4;3623:11;;;;;;;;2415:1273;3672:5;3665:12;;;2182:1512;;;;;:::o;10979:92:11:-;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.1;\n\nimport \"./openzeppelin/presets/ERC20PresetMinterPauser.sol\";\nimport \"./openzeppelin/Initializable.sol\";\n\ncontract ERC20Token is Initializable, ERC20PresetMinterPauserUpgradeSafe {\n  function initialize(string memory name, string memory symbol, uint8 decimals, uint256 initialSupply) public initializer {\n    ERC20PresetMinterPauserUpgradeSafe.initialize(name, symbol);\n\n    _setupDecimals(decimals);\n\n    if (initialSupply > 0) {\n      _mint(msg.sender, initialSupply);\n    }\n  }\n\n  function addMinter(address addr) public {\n    require(hasRole(MINTER_ROLE, _msgSender()), \"ERC20PresetMinterPauser: must have minter role to add a minter\");\n    _setupRole(MINTER_ROLE, addr);\n  }\n}",
  "sourcePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/ERC20Token.sol",
  "ast": {
    "absolutePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        64
      ]
    },
    "id": 65,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/presets/ERC20PresetMinterPauser.sol",
        "file": "./openzeppelin/presets/ERC20PresetMinterPauser.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 65,
        "sourceUnit": 2816,
        "src": "57:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/Initializable.sol",
        "file": "./openzeppelin/Initializable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 65,
        "sourceUnit": 1944,
        "src": "118:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1943,
              "src": "185:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$1943",
                "typeString": "contract Initializable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "185:13:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "ERC20PresetMinterPauserUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2815,
              "src": "200:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauserUpgradeSafe_$2815",
                "typeString": "contract ERC20PresetMinterPauserUpgradeSafe"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "200:34:0"
          }
        ],
        "contractDependencies": [
          1868,
          1943,
          2233,
          2815,
          3349,
          3434,
          3499,
          3577,
          4375
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 64,
        "linearizedBaseContracts": [
          64,
          2815,
          3499,
          4375,
          3434,
          3349,
          3577,
          2233,
          1868,
          1943
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "359:177:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "411:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "417:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 20,
                        "name": "ERC20PresetMinterPauserUpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2815,
                        "src": "365:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauserUpgradeSafe_$2815_$",
                          "typeString": "type(contract ERC20PresetMinterPauserUpgradeSafe)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2675,
                      "src": "365:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "365:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "446:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 27,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3333,
                      "src": "431:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "431:24:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "466:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "482:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "466:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41,
                  "nodeType": "IfStatement",
                  "src": "462:70:0",
                  "trueBody": {
                    "id": 40,
                    "nodeType": "Block",
                    "src": "485:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "499:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 36,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "499:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 37,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "511:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3221,
                            "src": "493:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "493:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "ExpressionStatement",
                        "src": "493:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "253279ad",
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 18,
                "modifierName": {
                  "id": 17,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1916,
                  "src": "347:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "347:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "259:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "279:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "301:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "317:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:81:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:0"
            },
            "scope": 64,
            "src": "239:297:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "580:155:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2656,
                            "src": "602:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 51,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "615:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "615:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 49,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2027,
                          "src": "594:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "594:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206164642061206d696e746572",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "630:64:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85bdf9259c7966d38efa1eba0065332bec99a1d75f25460eb5992a54c2838793",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to add a minter\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to add a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85bdf9259c7966d38efa1eba0065332bec99a1d75f25460eb5992a54c2838793",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to add a minter\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "586:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "586:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2656,
                        "src": "712:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "725:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 57,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2164,
                      "src": "701:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "701:29:0"
                }
              ]
            },
            "functionSelector": "983b2d56",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "559:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:14:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:0:0"
            },
            "scope": 64,
            "src": "540:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 65,
        "src": "162:575:0"
      }
    ],
    "src": "32:705:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "ERC20Token": [
        64
      ]
    },
    "id": 65,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/presets/ERC20PresetMinterPauser.sol",
        "file": "./openzeppelin/presets/ERC20PresetMinterPauser.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 65,
        "sourceUnit": 2816,
        "src": "57:60:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ggoma/Projects/neverlose.money-contract/contracts/openzeppelin/Initializable.sol",
        "file": "./openzeppelin/Initializable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 65,
        "sourceUnit": 1944,
        "src": "118:42:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1943,
              "src": "185:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$1943",
                "typeString": "contract Initializable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "185:13:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "ERC20PresetMinterPauserUpgradeSafe",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2815,
              "src": "200:34:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauserUpgradeSafe_$2815",
                "typeString": "contract ERC20PresetMinterPauserUpgradeSafe"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "200:34:0"
          }
        ],
        "contractDependencies": [
          1868,
          1943,
          2233,
          2815,
          3349,
          3434,
          3499,
          3577,
          4375
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 64,
        "linearizedBaseContracts": [
          64,
          2815,
          3499,
          4375,
          3434,
          3349,
          3577,
          2233,
          1868,
          1943
        ],
        "name": "ERC20Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "359:177:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "411:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 24,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "417:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 20,
                        "name": "ERC20PresetMinterPauserUpgradeSafe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2815,
                        "src": "365:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauserUpgradeSafe_$2815_$",
                          "typeString": "type(contract ERC20PresetMinterPauserUpgradeSafe)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2675,
                      "src": "365:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "365:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "365:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "446:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 27,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3333,
                      "src": "431:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "431:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "431:24:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31,
                      "name": "initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "466:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "482:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "466:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41,
                  "nodeType": "IfStatement",
                  "src": "462:70:0",
                  "trueBody": {
                    "id": 40,
                    "nodeType": "Block",
                    "src": "485:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "499:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 36,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "499:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 37,
                              "name": "initialSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "511:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 34,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3221,
                            "src": "493:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "493:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "ExpressionStatement",
                        "src": "493:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "253279ad",
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 18,
                "modifierName": {
                  "id": 17,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1916,
                  "src": "347:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "347:11:0"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "259:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "279:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "279:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "301:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "317:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:81:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:0"
            },
            "scope": 64,
            "src": "239:297:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "580:155:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2656,
                            "src": "602:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 51,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "615:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 52,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "615:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 49,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2027,
                          "src": "594:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "594:34:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206164642061206d696e746572",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "630:64:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85bdf9259c7966d38efa1eba0065332bec99a1d75f25460eb5992a54c2838793",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to add a minter\""
                        },
                        "value": "ERC20PresetMinterPauser: must have minter role to add a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85bdf9259c7966d38efa1eba0065332bec99a1d75f25460eb5992a54c2838793",
                          "typeString": "literal_string \"ERC20PresetMinterPauser: must have minter role to add a minter\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "586:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "586:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2656,
                        "src": "712:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "725:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 57,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2164,
                      "src": "701:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "701:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "701:29:0"
                }
              ]
            },
            "functionSelector": "983b2d56",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "559:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "559:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:14:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:0:0"
            },
            "scope": 64,
            "src": "540:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 65,
        "src": "162:575:0"
      }
    ],
    "src": "32:705:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x23946B6a7BA7B155C97acb95a8D992676868F747",
      "transactionHash": "0x127d7fef06f500d5208794d84e445604696160aedc1f2b512ac621d03fdabd5d"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-10-28T08:00:16.662Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
      },
      "burnFrom(address,uint256)": {
        "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(string,string)": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. See {ERC20-constructor}."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}